CREATE TABLE Category (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Name VARCHAR(255) NOT NULL UNIQUE,
    Description TEXT
);

CREATE TABLE Subcategory (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ParentID INT,
    Name VARCHAR(255) NOT NULL UNIQUE,
    Description TEXT,
    FOREIGN KEY (ParentID) REFERENCES Category(ID) ON DELETE SET NULL
);

CREATE TABLE Product (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Name VARCHAR(255) NOT NULL UNIQUE,
    Description TEXT,
    Image VARCHAR(255),
    Quantity INT NOT NULL CHECK (Quantity >= 0),
    Price DECIMAL(10, 2) NOT NULL CHECK (Price >= 0)
);

CREATE TABLE Product_Subcategory (
    ProductID INT NOT NULL,
    SubcategoryID INT NOT NULL,
    PRIMARY KEY (ProductID, SubcategoryID),
    FOREIGN KEY (ProductID) REFERENCES Product(ID) ON DELETE CASCADE,
    FOREIGN KEY (SubcategoryID) REFERENCES Subcategory(ID) ON DELETE CASCADE
);

CREATE TABLE `Order` (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    UserID INT NOT NULL,
    TransactionID INT
    -- FOREIGN KEY (UserID) REFERENCES User(ID) ON DELETE CASCADE -- USER REFERENCE (TO ALTER)!! 
);

CREATE TABLE Order_Items (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    OrderID INT NOT NULL,
    ProductID INT NOT NULL,
    Quantity INT NOT NULL CHECK (Quantity > 0),
    FOREIGN KEY (OrderID) REFERENCES `Order`(ID) ON DELETE CASCADE,
    FOREIGN KEY (ProductID) REFERENCES Product(ID) ON DELETE CASCADE
);

CREATE TABLE Transaction (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    OrderID INT NOT NULL,
    Status VARCHAR(50) NOT NULL CHECK (Status IN ('Pending', 'Completed', 'Cancelled')),
    Date DATETIME NOT NULL,
    FOREIGN KEY (OrderID) REFERENCES `Order`(ID) ON DELETE CASCADE
);
